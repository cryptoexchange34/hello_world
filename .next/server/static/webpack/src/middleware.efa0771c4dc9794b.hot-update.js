"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n\n// This function can be marked `async` if using `await` inside\nfunction middleware(request) {\n    const path = request.nextUrl.pathname;\n    // Skip middleware for non-browser requests and static files\n    if (request.headers.get(\"sec-fetch-dest\") === \"image\" || request.headers.get(\"sec-fetch-dest\") === \"style\" || request.headers.get(\"sec-fetch-dest\") === \"script\" || path.startsWith(\"/_next\")) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n    }\n    // Get path segments to determine the current route\n    const segments = path.split(\"/\").filter(Boolean);\n    // Check if user is admin using cookies\n    const isAdmin = request.cookies.get(\"isAdmin\")?.value === \"true\";\n    // Special maintenance mode check using cookies\n    // In a real app, this would check a database or API\n    const isMaintenanceMode = request.cookies.get(\"maintenanceMode\")?.value === \"true\";\n    // Get auth status\n    const isLoggedIn = request.cookies.get(\"isLoggedIn\")?.value === \"true\";\n    // Admin paths that are always accessible\n    const adminPaths = [\n        \"/admin\",\n        \"/admin/settings\",\n        \"/admin/tokens\",\n        \"/login\"\n    ];\n    const isAdminPath = segments[0] === \"admin\";\n    // Handle maintenance mode\n    if (isMaintenanceMode && !adminPaths.includes(path) && !isAdmin) {\n        // Redirect to maintenance page\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/maintenance\", request.url));\n    }\n    // Admin access restriction\n    if (isAdminPath && !isAdmin) {\n        if (isLoggedIn) {\n            // Redirect to dashboard if logged in but not admin\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/\", request.url));\n        } else {\n            // Redirect to login if not logged in\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/login\", request.url));\n        }\n    }\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n}\n// Configure paths that this middleware will run on\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except:\n     * - api routes\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */ \"/((?!api|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBRzNDLDhEQUE4RDtBQUN2RCxTQUFTQyxXQUFXQyxPQUFvQjtJQUM3QyxNQUFNQyxPQUFPRCxRQUFRRSxPQUFPLENBQUNDLFFBQVE7SUFFckMsNERBQTREO0lBQzVELElBQ0VILFFBQVFJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNCQUFzQixXQUMxQ0wsUUFBUUksT0FBTyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLFdBQzFDTCxRQUFRSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsWUFDMUNKLEtBQUtLLFVBQVUsQ0FBQyxXQUNoQjtRQUNBLE9BQU9SLGtGQUFZQSxDQUFDUyxJQUFJO0lBQzFCO0lBRUEsbURBQW1EO0lBQ25ELE1BQU1DLFdBQVdQLEtBQUtRLEtBQUssQ0FBQyxLQUFLQyxNQUFNLENBQUNDO0lBRXhDLHVDQUF1QztJQUN2QyxNQUFNQyxVQUFVWixRQUFRYSxPQUFPLENBQUNSLEdBQUcsQ0FBQyxZQUFZUyxVQUFVO0lBRTFELCtDQUErQztJQUMvQyxvREFBb0Q7SUFDcEQsTUFBTUMsb0JBQW9CZixRQUFRYSxPQUFPLENBQUNSLEdBQUcsQ0FBQyxvQkFBb0JTLFVBQVU7SUFFNUUsa0JBQWtCO0lBQ2xCLE1BQU1FLGFBQWFoQixRQUFRYSxPQUFPLENBQUNSLEdBQUcsQ0FBQyxlQUFlUyxVQUFVO0lBRWhFLHlDQUF5QztJQUN6QyxNQUFNRyxhQUFhO1FBQUM7UUFBVTtRQUFtQjtRQUFpQjtLQUFTO0lBQzNFLE1BQU1DLGNBQWNWLFFBQVEsQ0FBQyxFQUFFLEtBQUs7SUFFcEMsMEJBQTBCO0lBQzFCLElBQUlPLHFCQUFxQixDQUFDRSxXQUFXRSxRQUFRLENBQUNsQixTQUFTLENBQUNXLFNBQVM7UUFDL0QsK0JBQStCO1FBQy9CLE9BQU9kLGtGQUFZQSxDQUFDc0IsUUFBUSxDQUFDLElBQUlDLElBQUksZ0JBQWdCckIsUUFBUXNCLEdBQUc7SUFDbEU7SUFFQSwyQkFBMkI7SUFDM0IsSUFBSUosZUFBZSxDQUFDTixTQUFTO1FBQzNCLElBQUlJLFlBQVk7WUFDZCxtREFBbUQ7WUFDbkQsT0FBT2xCLGtGQUFZQSxDQUFDc0IsUUFBUSxDQUFDLElBQUlDLElBQUksS0FBS3JCLFFBQVFzQixHQUFHO1FBQ3ZELE9BQU87WUFDTCxxQ0FBcUM7WUFDckMsT0FBT3hCLGtGQUFZQSxDQUFDc0IsUUFBUSxDQUFDLElBQUlDLElBQUksVUFBVXJCLFFBQVFzQixHQUFHO1FBQzVEO0lBQ0Y7SUFFQSxPQUFPeEIsa0ZBQVlBLENBQUNTLElBQUk7QUFDMUI7QUFFQSxtREFBbUQ7QUFDNUMsTUFBTWdCLFNBQVM7SUFDcEJDLFNBQVM7UUFDUDs7Ozs7O0tBTUMsR0FDRDtLQUNEO0FBQ0gsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbWlkZGxld2FyZS50cz9kMTk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XG5cbi8vIFRoaXMgZnVuY3Rpb24gY2FuIGJlIG1hcmtlZCBgYXN5bmNgIGlmIHVzaW5nIGBhd2FpdGAgaW5zaWRlXG5leHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCBwYXRoID0gcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lO1xuICBcbiAgLy8gU2tpcCBtaWRkbGV3YXJlIGZvciBub24tYnJvd3NlciByZXF1ZXN0cyBhbmQgc3RhdGljIGZpbGVzXG4gIGlmIChcbiAgICByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdzZWMtZmV0Y2gtZGVzdCcpID09PSAnaW1hZ2UnIHx8XG4gICAgcmVxdWVzdC5oZWFkZXJzLmdldCgnc2VjLWZldGNoLWRlc3QnKSA9PT0gJ3N0eWxlJyB8fFxuICAgIHJlcXVlc3QuaGVhZGVycy5nZXQoJ3NlYy1mZXRjaC1kZXN0JykgPT09ICdzY3JpcHQnIHx8XG4gICAgcGF0aC5zdGFydHNXaXRoKCcvX25leHQnKVxuICApIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcbiAgfVxuICBcbiAgLy8gR2V0IHBhdGggc2VnbWVudHMgdG8gZGV0ZXJtaW5lIHRoZSBjdXJyZW50IHJvdXRlXG4gIGNvbnN0IHNlZ21lbnRzID0gcGF0aC5zcGxpdCgnLycpLmZpbHRlcihCb29sZWFuKTtcbiAgXG4gIC8vIENoZWNrIGlmIHVzZXIgaXMgYWRtaW4gdXNpbmcgY29va2llc1xuICBjb25zdCBpc0FkbWluID0gcmVxdWVzdC5jb29raWVzLmdldCgnaXNBZG1pbicpPy52YWx1ZSA9PT0gJ3RydWUnO1xuICBcbiAgLy8gU3BlY2lhbCBtYWludGVuYW5jZSBtb2RlIGNoZWNrIHVzaW5nIGNvb2tpZXNcbiAgLy8gSW4gYSByZWFsIGFwcCwgdGhpcyB3b3VsZCBjaGVjayBhIGRhdGFiYXNlIG9yIEFQSVxuICBjb25zdCBpc01haW50ZW5hbmNlTW9kZSA9IHJlcXVlc3QuY29va2llcy5nZXQoJ21haW50ZW5hbmNlTW9kZScpPy52YWx1ZSA9PT0gJ3RydWUnO1xuICBcbiAgLy8gR2V0IGF1dGggc3RhdHVzXG4gIGNvbnN0IGlzTG9nZ2VkSW4gPSByZXF1ZXN0LmNvb2tpZXMuZ2V0KCdpc0xvZ2dlZEluJyk/LnZhbHVlID09PSAndHJ1ZSc7XG4gIFxuICAvLyBBZG1pbiBwYXRocyB0aGF0IGFyZSBhbHdheXMgYWNjZXNzaWJsZVxuICBjb25zdCBhZG1pblBhdGhzID0gWycvYWRtaW4nLCAnL2FkbWluL3NldHRpbmdzJywgJy9hZG1pbi90b2tlbnMnLCAnL2xvZ2luJ107XG4gIGNvbnN0IGlzQWRtaW5QYXRoID0gc2VnbWVudHNbMF0gPT09ICdhZG1pbic7XG4gIFxuICAvLyBIYW5kbGUgbWFpbnRlbmFuY2UgbW9kZVxuICBpZiAoaXNNYWludGVuYW5jZU1vZGUgJiYgIWFkbWluUGF0aHMuaW5jbHVkZXMocGF0aCkgJiYgIWlzQWRtaW4pIHtcbiAgICAvLyBSZWRpcmVjdCB0byBtYWludGVuYW5jZSBwYWdlXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbWFpbnRlbmFuY2UnLCByZXF1ZXN0LnVybCkpO1xuICB9XG4gIFxuICAvLyBBZG1pbiBhY2Nlc3MgcmVzdHJpY3Rpb25cbiAgaWYgKGlzQWRtaW5QYXRoICYmICFpc0FkbWluKSB7XG4gICAgaWYgKGlzTG9nZ2VkSW4pIHtcbiAgICAgIC8vIFJlZGlyZWN0IHRvIGRhc2hib2FyZCBpZiBsb2dnZWQgaW4gYnV0IG5vdCBhZG1pblxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvJywgcmVxdWVzdC51cmwpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmVkaXJlY3QgdG8gbG9naW4gaWYgbm90IGxvZ2dlZCBpblxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXF1ZXN0LnVybCkpO1xuICAgIH1cbiAgfVxuICBcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XG59XG5cbi8vIENvbmZpZ3VyZSBwYXRocyB0aGF0IHRoaXMgbWlkZGxld2FyZSB3aWxsIHJ1biBvblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgbWF0Y2hlcjogW1xuICAgIC8qXG4gICAgICogTWF0Y2ggYWxsIHJlcXVlc3QgcGF0aHMgZXhjZXB0OlxuICAgICAqIC0gYXBpIHJvdXRlc1xuICAgICAqIC0gX25leHQvc3RhdGljIChzdGF0aWMgZmlsZXMpXG4gICAgICogLSBfbmV4dC9pbWFnZSAoaW1hZ2Ugb3B0aW1pemF0aW9uIGZpbGVzKVxuICAgICAqIC0gZmF2aWNvbi5pY28gKGZhdmljb24gZmlsZSlcbiAgICAgKi9cbiAgICAnLygoPyFhcGl8X25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvKS4qKScsXG4gIF0sXG59OyAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJwYXRoIiwibmV4dFVybCIsInBhdGhuYW1lIiwiaGVhZGVycyIsImdldCIsInN0YXJ0c1dpdGgiLCJuZXh0Iiwic2VnbWVudHMiLCJzcGxpdCIsImZpbHRlciIsIkJvb2xlYW4iLCJpc0FkbWluIiwiY29va2llcyIsInZhbHVlIiwiaXNNYWludGVuYW5jZU1vZGUiLCJpc0xvZ2dlZEluIiwiYWRtaW5QYXRocyIsImlzQWRtaW5QYXRoIiwiaW5jbHVkZXMiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});